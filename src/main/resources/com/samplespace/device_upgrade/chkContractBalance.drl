package com.samplespace.device_upgrade;

import com.samplespace.device_upgrade.customer;
import com.samplespace.device_upgrade.custRuleChkRes;

import java.util.Date;
import java.text.SimpleDateFormat;
import java.time.temporal.ChronoUnit;
import java.time.LocalDate;

function boolean chkContractEndDate(String contractEndDate) {
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    Date passedDate = dateFormat.parse(contractEndDate);
    return passedDate.after(new Date());
}

function boolean getBalance(int monthlyPay, String contractEndDate) {
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String currDate = dateFormat.format(new Date());
    Date passedDate = dateFormat.parse(contractEndDate);
    int accBalance = (int) (Math.ceil((double) ChronoUnit.DAYS.between(LocalDate.parse(currDate), LocalDate.parse(contractEndDate))/30) * monthlyPay);
    return true;
}

rule "chkContract"
    ruleflow-group "chkContract"
    dialect "mvel"
	when
		cc: customer(customer.contract.endDate != null)
	then
        cc.ruleCheck = new custRuleChkRes();
        cc.ruleCheck.setIsContractOver(chkContractEndDate(cc.contract.endDate));
        //modify (cc) {
            //ruleCheck.setIsContractOver(true);
        //}
    end
    
    
    
    
    
    