package com.samplespace.device_upgrade;

import com.samplespace.device_upgrade.customer;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.time.temporal.ChronoUnit;
import java.time.LocalDate;

function boolean chkContractEndDate(String contractEndDate) {
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    Date passedDate = dateFormat.parse(contractEndDate);
    return passedDate.after(new Date());
}

function double getBalance(int monthlyPay, String contractEndDate) {
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String currDate = dateFormat.format(new Date());
    Date passedDate = dateFormat.parse(contractEndDate);    
    return Math.ceil((double) ChronoUnit.DAYS.between(LocalDate.parse(currDate), LocalDate.parse(contractEndDate))/30) * monthlyPay;
}

rule "chkBalanceContract"
    ruleflow-group "chkContract"
	when
		offer: customer(chkContractEndDate(customer.contract.endDate))
	then
		offer.setPhone("15");
	end